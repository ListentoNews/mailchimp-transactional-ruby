=begin
#Mailchimp Transactional API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.9
Contact: apihelp@mandrill.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'uri'

module MailchimpTransactional
  class InboundApi
    attr_accessor :api_client

    attr_accessor :api_key

    def initialize(api_key = '', api_client = ApiClient.default)
      @api_key = api_key
      @api_client = api_client
    end
    # Add inbound domain
    # Add an inbound domain to your account.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2006]
    def add_domain(body = {}, opts = {})
      data = add_domain_with_http_info(body, opts)
      data
    end

    # Add inbound domain
    # Add an inbound domain to your account.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2006, Fixnum, Hash)>] InlineResponse2006 data, response status code and response headers
    def add_domain_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/inbound/add-domain'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # Add mailbox route
    # Add a new mailbox route to an inbound domain.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20010]
    def add_route(body = {}, opts = {})
      data = add_route_with_http_info(body, opts)
      data
    end

    # Add mailbox route
    # Add a new mailbox route to an inbound domain.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20010, Fixnum, Hash)>] InlineResponse20010 data, response status code and response headers
    def add_route_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/inbound/add-route'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # Check domain settings
    # Check the MX settings for an inbound domain. The domain must have already been added with the add-domain call.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2007]
    def check_domain(body = {}, opts = {})
      data = check_domain_with_http_info(body, opts)
      data
    end

    # Check domain settings
    # Check the MX settings for an inbound domain. The domain must have already been added with the add-domain call.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2007, Fixnum, Hash)>] InlineResponse2007 data, response status code and response headers
    def check_domain_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/inbound/check-domain'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # Delete inbound domain
    # Delete an inbound domain from the account. All mail will stop routing for this domain immediately.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2008]
    def delete_domain(body = {}, opts = {})
      data = delete_domain_with_http_info(body, opts)
      data
    end

    # Delete inbound domain
    # Delete an inbound domain from the account. All mail will stop routing for this domain immediately.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2008, Fixnum, Hash)>] InlineResponse2008 data, response status code and response headers
    def delete_domain_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/inbound/delete-domain'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # Delete mailbox route
    # Delete an existing inbound mailbox route.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20012]
    def delete_route(body = {}, opts = {})
      data = delete_route_with_http_info(body, opts)
      data
    end

    # Delete mailbox route
    # Delete an existing inbound mailbox route.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20012, Fixnum, Hash)>] InlineResponse20012 data, response status code and response headers
    def delete_route_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/inbound/delete-route'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # List inbound domains
    # List the domains that have been configured for inbound delivery.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<InlineResponse2005>]
    def domains(body = {}, opts = {})
      data = domains_with_http_info(body, opts)
      data
    end

    # List inbound domains
    # List the domains that have been configured for inbound delivery.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<InlineResponse2005>, Fixnum, Hash)>] Array<InlineResponse2005> data, response status code and response headers
    def domains_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/inbound/domains'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # List mailbox routes
    # List the mailbox routes defined for an inbound domain.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<InlineResponse2009>]
    def routes(body = {}, opts = {})
      data = routes_with_http_info(body, opts)
      data
    end

    # List mailbox routes
    # List the mailbox routes defined for an inbound domain.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<InlineResponse2009>, Fixnum, Hash)>] Array<InlineResponse2009> data, response status code and response headers
    def routes_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/inbound/routes'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # Send mime document
    # Take a raw MIME document destined for a domain with inbound domains set up, and send it to the inbound hook exactly as if it had been sent over SMTP.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<InlineResponse20013>]
    def send_raw(body = {}, opts = {})
      data = send_raw_with_http_info(body, opts)
      data
    end

    # Send mime document
    # Take a raw MIME document destined for a domain with inbound domains set up, and send it to the inbound hook exactly as if it had been sent over SMTP.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<InlineResponse20013>, Fixnum, Hash)>] Array<InlineResponse20013> data, response status code and response headers
    def send_raw_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/inbound/send-raw'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # Update mailbox route
    # Update the pattern or webhook of an existing inbound mailbox route. If null is provided for any fields, the values will remain unchanged.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20011]
    def update_route(body = {}, opts = {})
      data = update_route_with_http_info(body, opts)
      data
    end

    # Update mailbox route
    # Update the pattern or webhook of an existing inbound mailbox route. If null is provided for any fields, the values will remain unchanged.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20011, Fixnum, Hash)>] InlineResponse20011 data, response status code and response headers
    def update_route_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/inbound/update-route'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
  end
end

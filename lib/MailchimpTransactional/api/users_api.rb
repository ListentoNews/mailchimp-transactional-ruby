=begin
#Mailchimp Transactional API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.9
Contact: apihelp@mandrill.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'uri'

module MailchimpTransactional
  class UsersApi
    attr_accessor :api_client

    attr_accessor :api_key

    def initialize(api_key = '', api_client = ApiClient.default)
      @api_key = api_key
      @api_client = api_client
    end
    # Get user info
    # Return the information about the API-connected user.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20069]
    def info(body = {}, opts = {})
      data = info_with_http_info(body, opts)
      data
    end

    # Get user info
    # Return the information about the API-connected user.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20069, Fixnum, Hash)>] InlineResponse20069 data, response status code and response headers
    def info_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/users/info'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # Ping
    # Validate an API key and respond to a ping.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [String]
    def ping(body = {}, opts = {})
      data = ping_with_http_info(body, opts)
      data
    end

    # Ping
    # Validate an API key and respond to a ping.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def ping_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/users/ping'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # Ping 2
    # Validate an API key and respond to a ping (JSON parser version).
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20070]
    def ping2(body = {}, opts = {})
      data = ping2_with_http_info(body, opts)
      data
    end

    # Ping 2
    # Validate an API key and respond to a ping (JSON parser version).
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20070, Fixnum, Hash)>] InlineResponse20070 data, response status code and response headers
    def ping2_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/users/ping2'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # List account senders
    # Return the senders that have tried to use this account, both verified and unverified.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<InlineResponse20040>]
    def senders(body = {}, opts = {})
      data = senders_with_http_info(body, opts)
      data
    end

    # List account senders
    # Return the senders that have tried to use this account, both verified and unverified.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<InlineResponse20040>, Fixnum, Hash)>] Array<InlineResponse20040> data, response status code and response headers
    def senders_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/users/senders'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
  end
end

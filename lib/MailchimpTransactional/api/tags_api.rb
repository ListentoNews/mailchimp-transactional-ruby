=begin
#Mailchimp Transactional API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.9
Contact: apihelp@mandrill.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'uri'

module MailchimpTransactional
  class TagsApi
    attr_accessor :api_client

    attr_accessor :api_key

    def initialize(api_key = '', api_client = ApiClient.default)
      @api_key = api_key
      @api_client = api_client
    end
    # View all tags history
    # Return the recent history (hourly stats for the last 30 days) for all tags.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<InlineResponse20028>]
    def all_time_series(body = {}, opts = {})
      data = all_time_series_with_http_info(body, opts)
      data
    end

    # View all tags history
    # Return the recent history (hourly stats for the last 30 days) for all tags.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<InlineResponse20028>, Fixnum, Hash)>] Array<InlineResponse20028> data, response status code and response headers
    def all_time_series_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/tags/all-time-series'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # Delete tag
    # Deletes a tag permanently. Deleting a tag removes the tag from any messages that have been sent, and also deletes the tag's stats. There is no way to undo this operation, so use it carefully.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20055]
    def delete(body = {}, opts = {})
      data = delete_with_http_info(body, opts)
      data
    end

    # Delete tag
    # Deletes a tag permanently. Deleting a tag removes the tag from any messages that have been sent, and also deletes the tag&#39;s stats. There is no way to undo this operation, so use it carefully.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20055, Fixnum, Hash)>] InlineResponse20055 data, response status code and response headers
    def delete_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/tags/delete'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # Get tag info
    # Return more detailed information about a single tag, including aggregates of recent stats.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20056]
    def info(body = {}, opts = {})
      data = info_with_http_info(body, opts)
      data
    end

    # Get tag info
    # Return more detailed information about a single tag, including aggregates of recent stats.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20056, Fixnum, Hash)>] InlineResponse20056 data, response status code and response headers
    def info_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/tags/info'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # List tags
    # Return all of the user-defined tag information.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<InlineResponse20054>]
    def list(body = {}, opts = {})
      data = list_with_http_info(body, opts)
      data
    end

    # List tags
    # Return all of the user-defined tag information.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<InlineResponse20054>, Fixnum, Hash)>] Array<InlineResponse20054> data, response status code and response headers
    def list_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/tags/list'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
    # View tag history
    # Return the recent history (hourly stats for the last 30 days) for a tag.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<InlineResponse20028>]
    def time_series(body = {}, opts = {})
      data = time_series_with_http_info(body, opts)
      data
    end

    # View tag history
    # Return the recent history (hourly stats for the last 30 days) for a tag.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<InlineResponse20028>, Fixnum, Hash)>] Array<InlineResponse20028> data, response status code and response headers
    def time_series_with_http_info(body, opts = {})
      # add api key to request body
      body[:key] = @api_key

      # resource path
      local_var_path = '/tags/time-series'

      # http body (model)
      data = @api_client.call_api(:POST, local_var_path, :body => body)
      return data
    end
  end
end
